<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker基本软件安装记录</title>
    <link href="/docker/Docker%E5%9F%BA%E6%9C%AC%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/"/>
    <url>/docker/Docker%E5%9F%BA%E6%9C%AC%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="0-开发环境"><a href="#0-开发环境" class="headerlink" title="0.开发环境"></a>0.开发环境</h1><p>本人是 MacBook 14 2023 M2芯片，docker 是用的 lima虚拟机安装的。在安装一些镜像的时候需要去找到有 arm64 架构的版本，按照网上的指定为 amd64 架构没用，还是启动不了容器。</p><h1 id="1-MySQL安装部署"><a href="#1-MySQL安装部署" class="headerlink" title="1.MySQL安装部署"></a>1.MySQL安装部署</h1><ol><li>首先从拉去镜像 <code>docker pull --platform linux/arm64/v8 mysql:8.0.21</code>；</li><li>创建配置文件用于映射给容器，<code>mkdir -p /etc/docker/mysql8/config</code> ，<code>touch /etc/docker/mysql8/config/my.cnf</code>；</li><li>修改上一步创建的配置文件，内容如下：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"># Copyright (c) <span class="hljs-number">2017</span>, Oracle and/or its affiliates. All rights reserved.<br>#<br># This program is free software; you can redistribute it and/or modify<br># it under the terms of the GNU General Public License as published by<br># the Free Software Foundation; version <span class="hljs-number">2</span> of the License.<br>#<br># This program is distributed in the hope that it will be useful,<br># but WITHOUT ANY WARRANTY; without even the implied warranty of<br># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br># GNU General Public License <span class="hljs-keyword">for</span> more details.<br>#<br># You should have received a copy of the GNU General Public License<br># along with <span class="hljs-built_in">this</span> program; <span class="hljs-keyword">if</span> not, write to the Free Software<br># Foundation, Inc., <span class="hljs-number">51</span> Franklin St, Fifth Floor, Boston, MA  <span class="hljs-number">02110</span>-<span class="hljs-number">1301</span> USA<br><br>#<br># The MySQL  Server configuration file.<br>#<br># For explanations see<br># http:<span class="hljs-comment">//dev.mysql.com/doc/mysql/en/server-system-variables.html</span><br><br>[mysqld]<br>pid-file        = /<span class="hljs-keyword">var</span>/run/mysqld/mysqld.<span class="hljs-type">pid</span><br><span class="hljs-variable">socket</span>          <span class="hljs-operator">=</span> /<span class="hljs-keyword">var</span>/run/mysqld/mysqld.<span class="hljs-type">sock</span><br><span class="hljs-variable">datadir</span>         <span class="hljs-operator">=</span> /<span class="hljs-keyword">var</span>/lib/mysql<br>secure-file-priv= NULL<br><br># Custom config should go here<br>!includedir /etc/mysql/conf.d/<br><br># bin log setting<br>log-bin=mysql-bin<br>binlog-format=ROW<br>server-id=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><ol start="4"><li>创建容器：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">docker run --name mysql-iot \<br>-p <span class="hljs-number">3306</span>:<span class="hljs-number">3306</span> \<br>-v /etc/localtime:/etc/localtime:ro \<br>-v /etc/docker/mysql8/config/my.cnf:/etc/mysql/my.cnf \<br>-v /etc/docker/mysql8/log:/<span class="hljs-keyword">var</span>/log/mysql \<br>-v /etc/docker/mysql8/data:/<span class="hljs-keyword">var</span>/lib/mysql \<br>-e MYSQL_ROOT_PASSWORD=root \<br>-d mysql:<span class="hljs-number">8.0</span><span class="hljs-number">.21</span><br></code></pre></td></tr></table></figure><ol start="5"><li>进入容器内验证：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">docker <span class="hljs-keyword">exec</span> <span class="hljs-operator">-</span>it mysql<span class="hljs-operator">-</span>iot <span class="hljs-operator">/</span>bin<span class="hljs-operator">/</span>bash<br>mysql <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>proot <span class="hljs-comment">--default-character-set=utf8</span><br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;log_%&#x27;</span>;<br><span class="hljs-keyword">show</span> master status;<br></code></pre></td></tr></table></figure><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202306181938521.png" alt="image-202306181938521"></p><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202306181939195.png" alt="image-202306181939195"></p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyExcel的使用</title>
    <link href="/SpringBoot/EasyExcel%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/SpringBoot/EasyExcel%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="1-基本读写Excel"><a href="#1-基本读写Excel" class="headerlink" title="1.基本读写Excel"></a>1.基本读写Excel</h1><h2 id="1-1-导入具体的依赖"><a href="#1-1-导入具体的依赖" class="headerlink" title="1.1.导入具体的依赖"></a>1.1.导入具体的依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>easyexcel<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="1-2-实体类"><a href="#1-2-实体类" class="headerlink" title="1.2.实体类"></a>1.2.实体类</h2><p>在这里以导入值班人员信息为例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ExcelIgnoreUnannotated</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DutyPersonEntity</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-meta">@Serial</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> -<span class="hljs-number">5785320784299816034L</span>;<br>    <span class="hljs-keyword">private</span> Long id;<br>    <span class="hljs-meta">@ExcelProperty(index = 0, value = &quot;值班人员姓名&quot;)</span><br>    <span class="hljs-keyword">private</span> String personName;<br>    <span class="hljs-meta">@ExcelProperty(index = 1, value = &quot;值班地点&quot;)</span><br>    <span class="hljs-keyword">private</span> String dutyPlace;<br>    <span class="hljs-meta">@ExcelProperty(index = 2, value = &quot;电话号码&quot;)</span><br>    <span class="hljs-keyword">private</span> String phoneNum;<br>    <span class="hljs-meta">@ExcelProperty(index = 3, value = &quot;值班时间&quot;)</span><br>    <span class="hljs-meta">@DateTimeFormat(&quot;yyyy-MM-dd&quot;)</span><br>    <span class="hljs-meta">@JsonSerialize(using = LocalDateTimeSerializer.class)</span><br>    <span class="hljs-meta">@JsonDeserialize(using = LocalDateTimeDeserializer.class)</span><br>    <span class="hljs-meta">@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br>    <span class="hljs-keyword">private</span> LocalDateTime dutyTime;<br>    <span class="hljs-keyword">private</span> Integer deleteFlag;<br>    <span class="hljs-meta">@JsonSerialize(using = LocalDateTimeSerializer.class)</span><br>    <span class="hljs-meta">@JsonDeserialize(using = LocalDateTimeDeserializer.class)</span><br>    <span class="hljs-meta">@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br>    <span class="hljs-keyword">private</span> LocalDateTime createTime;<br>    <span class="hljs-meta">@JsonSerialize(using = LocalDateTimeSerializer.class)</span><br>    <span class="hljs-meta">@JsonDeserialize(using = LocalDateTimeDeserializer.class)</span><br>    <span class="hljs-meta">@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br>    <span class="hljs-keyword">private</span> LocalDateTime updateTime;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-3-持久层"><a href="#1-3-持久层" class="headerlink" title="1.3.持久层"></a>1.3.持久层</h2><p>首先创建接口 <code>DutyPersonRepository</code> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Repository</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">DutyPersonRepository</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 批量插入</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> list</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">long</span> <span class="hljs-title function_">insertBatch</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;list&quot;)</span> List&lt;DutyPersonEntity&gt; list)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>对应的 xml 文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span></span><br><span class="hljs-meta">        <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.lwh.learn.easyexcel.repository.DutyPersonRepository&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;insertBatch&quot;</span>&gt;</span><br>        insert into duty_person(person_name,duty_place,phone_num,duty_time,delete_flag,create_time,update_time)<br>        values<br>        <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;list&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span>&gt;</span><br>            (#&#123;item.personName&#125;,#&#123;item.dutyPlace&#125;,#&#123;item.phoneNum&#125;,#&#123;item.dutyTime&#125;,<br>            #&#123;item.deleteFlag&#125;,#&#123;item.createTime&#125;,#&#123;item.updateTime&#125;)<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">spring.datasource.url</span>=<span class="hljs-string">jdbc:postgresql://127.0.0.1:49156/postgres</span><br><span class="hljs-attr">spring.datasource.driver-class-name</span>=<span class="hljs-string">org.postgresql.Driver</span><br><span class="hljs-attr">spring.datasource.username</span>=<span class="hljs-string">postgres</span><br><span class="hljs-attr">spring.datasource.password</span>=<span class="hljs-string">postgrespw</span><br><span class="hljs-attr">mybatis.mapper-locations</span>=<span class="hljs-string">classpath:/repository/*.xml</span><br><span class="hljs-attr">mybatis.type-aliases-package</span>=<span class="hljs-string">com.lwh.learn.easyexcel.entity</span><br><span class="hljs-attr">mybatis.configuration.map-underscore-to-camel-case</span>=<span class="hljs-string">true</span><br><span class="hljs-attr">logging.level.com.lwh.learn.easyexcel.repository</span>=<span class="hljs-string">debug</span><br></code></pre></td></tr></table></figure><h2 id="1-4-读监听器"><a href="#1-4-读监听器" class="headerlink" title="1.4.读监听器"></a>1.4.读监听器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DutyPersonListener</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ReadListener</span>&lt;DutyPersonEntity&gt; &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 每隔5条存储数据库，实际使用中可以100条，然后清理list ，方便内存回收</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">BATCH_COUNT</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 缓存的数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;DutyPersonEntity&gt; cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT);<br><br>    <span class="hljs-keyword">private</span> DutyPersonRepository dutyPersonRepository;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DutyPersonListener</span><span class="hljs-params">(DutyPersonRepository dutyPersonRepository)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dutyPersonRepository = dutyPersonRepository;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 每来一条数据都会调用</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dutyPersonEntity one row value. Is is same as &#123;<span class="hljs-doctag">@link</span> AnalysisContext#readRowHolder()&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> analysisContext  analysis context</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">invoke</span><span class="hljs-params">(DutyPersonEntity dutyPersonEntity, AnalysisContext analysisContext)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;解析到一条数据:&#123;&#125;&quot;</span>, JacksonUtils.entity2Json(dutyPersonEntity));<br>        cachedDataList.add(dutyPersonEntity);<br>        <span class="hljs-keyword">if</span> (cachedDataList.size() &gt;= BATCH_COUNT) &#123;<br>            saveData();<br>            <span class="hljs-comment">//存储完成后清理 list</span><br>            cachedDataList = ListUtils.newArrayListWithExpectedSize(BATCH_COUNT);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 所以数据解析完成了，都会来调用</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> analysisContext</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doAfterAllAnalysed</span><span class="hljs-params">(AnalysisContext analysisContext)</span> &#123;<br>        <span class="hljs-comment">// 这里的 save 操作是插入不足 BATCH_COUNT 的数据</span><br>        saveData();<br>        log.info(<span class="hljs-string">&quot;所以数据解析完成&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">saveData</span><span class="hljs-params">()</span> &#123;<br>        log.info(<span class="hljs-string">&quot;&#123;&#125;条数据，开始存储数据库！&quot;</span>, cachedDataList.size());<br>        cachedDataList.forEach(dutyPersonEntity -&gt; &#123;<br>            dutyPersonEntity.setDeleteFlag(<span class="hljs-number">0</span>);<br>            dutyPersonEntity.setCreateTime(LocalDateTime.now());<br>            dutyPersonEntity.setUpdateTime(LocalDateTime.now());<br>        &#125;);<br>        dutyPersonRepository.insertBatch(cachedDataList);<br>        log.info(<span class="hljs-string">&quot;存储数据库成功！&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="1-5-测试"><a href="#1-5-测试" class="headerlink" title="1.5.测试"></a>1.5.测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">EasyExcelApplicationTest</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> DutyPersonRepository dutyPersonRepository;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">localDateTimeTest</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">DutyPersonEntity</span> <span class="hljs-variable">dutyPersonEntity</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DutyPersonEntity</span>();<br>        <span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">now</span> <span class="hljs-operator">=</span> LocalDateTime.now();<br>        dutyPersonEntity.setDutyTime(now);<br>        log.info(<span class="hljs-string">&quot;now:&#123;&#125;&quot;</span>, now);<br>        log.info(<span class="hljs-string">&quot;json:&#123;&#125;&quot;</span>, JacksonUtils.entity2Json(dutyPersonEntity));<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">simpleDownload</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\Project\\JavaProject\\spring-learn\\spring-easyexcel\\src\\main\\resources\\值班人员模板.xlsx&quot;</span>;<br>        EasyExcel.write(fileName, DutyPersonEntity.class)<br>                .sheet(<span class="hljs-string">&quot;测试&quot;</span>)<br>                .doWrite(() -&gt; <span class="hljs-literal">null</span>);<br>        log.info(<span class="hljs-string">&quot;成功导出模板Excel&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">simpleRead</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\Project\\JavaProject\\spring-learn\\spring-easyexcel\\src\\main\\resources\\值班人员模板.xlsx&quot;</span>;<br>        EasyExcel.read(fileName, DutyPersonEntity.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DutyPersonListener</span>(dutyPersonRepository)).sheet().doRead();<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">simpleWrite</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\Project\\JavaProject\\spring-learn\\spring-easyexcel\\src\\main\\resources\\值班人员下载.xlsx&quot;</span>;<br>        EasyExcel.write(fileName, DutyPersonEntity.class)<br>                .sheet(<span class="hljs-string">&quot;测试&quot;</span>)<br>                .doWrite(() -&gt; &#123;<br>                    PageHelper.startPage(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>);<br>                    <span class="hljs-keyword">return</span> dutyPersonRepository.selectBatch();<br>                &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202302192011132.png" alt="image-20230219131436785"></p><p><img src="C:\Users\85303\AppData\Roaming\Typora\typora-user-images\image-20230219131444906.png" alt="image-20230219131444906"></p><h2 id="1-6-遇到的问题"><a href="#1-6-遇到的问题" class="headerlink" title="1.6.遇到的问题"></a>1.6.遇到的问题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ExcelProperty(index = 3, value = &quot;值班时间&quot;)</span><br><span class="hljs-meta">@DateTimeFormat(&quot;yyyy-MM-dd&quot;)</span><br><span class="hljs-meta">@JsonSerialize(using = LocalDateTimeSerializer.class)</span><br><span class="hljs-meta">@JsonDeserialize(using = LocalDateTimeDeserializer.class)</span><br><span class="hljs-meta">@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br><span class="hljs-keyword">private</span> LocalDateTime dutyTime;<br></code></pre></td></tr></table></figure><p>当我尝试在 <code>@ExcelProperty</code> 注解中指定 <code>convert</code> 为 <code>localdatetime</code> 包下的转换器的时候会存在一些问题。指定为 <code>LocalDateTimeDateConverter</code> 的时候从数据库导出数据是可以的，但是在基础导出的数据导入的时候会无法转换。所以在使用的时候尽量不指定 <code>convert</code> ？或者之后这种需要导入导出的字段就用 <code>Date</code> 类型好了。</p><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202302192012446.png" alt="image-20230219193141149"></p><h1 id="2-Web测试"><a href="#2-Web测试" class="headerlink" title="2.Web测试"></a>2.Web测试</h1><h2 id="2-1-导入依赖"><a href="#2-1-导入依赖" class="headerlink" title="2.1.导入依赖"></a>2.1.导入依赖</h2><p>导入 <code>springdoc</code> 的依赖，在这里不能导入 <code>springdoc-openapi-ui 1.6.14</code>，会无法打开接口页面。这个版本及以下的版本应该都是不行的，依赖的版本没有更新。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;dependency&gt;<br>    &lt;groupId&gt;org.springdoc&lt;/groupId&gt;<br>    &lt;artifactId&gt;springdoc-openapi-starter-webmvc-ui&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.0</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">springdoc.swagger-ui.path</span>=<span class="hljs-string">/swagger-ui.html</span><br></code></pre></td></tr></table></figure><h2 id="2-2-Web代码"><a href="#2-2-Web代码" class="headerlink" title="2.2.Web代码"></a>2.2.Web代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Tag(name = &quot;excel测试&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/test&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestController</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> DutyPersonRepository dutyPersonRepository;<br><br>    <span class="hljs-meta">@Operation(summary = &quot;下载值班人员模板&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/download&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">download</span><span class="hljs-params">(HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        response.setContentType(<span class="hljs-string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>);<br>        response.setCharacterEncoding(<span class="hljs-string">&quot;utf-8&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> URLEncoder.encode(<span class="hljs-string">&quot;测试&quot;</span>, StandardCharsets.UTF_8).replaceAll(<span class="hljs-string">&quot;\\+&quot;</span>, <span class="hljs-string">&quot;%20&quot;</span>);<br>        response.setHeader(<span class="hljs-string">&quot;Content-disposition&quot;</span>, <span class="hljs-string">&quot;attachment;filename*=utf-8&#x27;&#x27;&quot;</span> + fileName + <span class="hljs-string">&quot;.xlsx&quot;</span>);<br>        EasyExcel.write(response.getOutputStream(), DutyPersonEntity.class).sheet(<span class="hljs-string">&quot;模板&quot;</span>).doWrite(() -&gt; <span class="hljs-literal">null</span>);<br>        log.info(<span class="hljs-string">&quot;成功下载了模板&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Operation(summary = &quot;导入值班人员数据&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;upload&quot;)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">upload</span><span class="hljs-params">(MultipartFile file)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        EasyExcel.read(file.getInputStream(), DutyPersonEntity.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">DutyPersonListener</span>(dutyPersonRepository)).sheet().doRead();<br>        log.info(<span class="hljs-string">&quot;读取数据成功&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>打开 web 页面 <code>http://localhost:8080/swagger-ui.html</code></p><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202302192013090.png" alt="image-20230219200853691"></p><p>点击下载接口就可以成功下载模板了。</p><p>但是导入数据的时候存在一些问题，应该不是代码的问题。我使用 Postman 就可以导入数据了。</p><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202302192013329.png" alt="image-20230219200947782"></p><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202302192013053.png" alt="image-20230219201054816"></p><p><img src="https://hwl-blog.oss-cn-beijing.aliyuncs.com/image/202302192013831.png" alt="image-20230219201117324"></p>]]></content>
    
    
    <categories>
      
      <category>SpringBoot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot全局异常处理和参数校验</title>
    <link href="/SpringBoot/SpringBoot%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%92%8C%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/"/>
    <url>/SpringBoot/SpringBoot%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%92%8C%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a>全局异常处理</h1><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-webflux<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-log4j12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="定义状态码"><a href="#定义状态码" class="headerlink" title="定义状态码"></a>定义状态码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ResponseCodeEnum</span> &#123;<br>    <span class="hljs-comment">//操作成功</span><br>    RSC200(<span class="hljs-number">200</span>, <span class="hljs-string">&quot;操作成功&quot;</span>),<br>    <span class="hljs-comment">//错误请求</span><br>    RSC400(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;错误的请求&quot;</span>),<br>    <span class="hljs-comment">//服务异常</span><br>    RSC500(<span class="hljs-number">500</span>, <span class="hljs-string">&quot;系统异常，请稍后重试&quot;</span>),<br>    ;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 自定义状态码</span><br><span class="hljs-comment">     **/</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> code;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 自定义描述</span><br><span class="hljs-comment">     **/</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String message;<br><br>    ResponseCodeEnum(<span class="hljs-type">int</span> code, String message) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMessage</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> message;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="统一返回结果"><a href="#统一返回结果" class="headerlink" title="统一返回结果"></a>统一返回结果</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ResponseData</span>&lt;T&gt; &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> status;<br>    <span class="hljs-keyword">private</span> String message;<br>    <span class="hljs-keyword">private</span> T Data;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> timestamp;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ResponseData</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">this</span>.timestamp = System.currentTimeMillis();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; ResponseData&lt;T&gt; <span class="hljs-title function_">success</span><span class="hljs-params">(T data)</span> &#123;<br>        ResponseData&lt;T&gt; responseData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResponseData</span>&lt;&gt;();<br>        responseData.setStatus(ResponseCodeEnum.RSC200.getCode());<br>        responseData.setMessage(ResponseCodeEnum.RSC200.getMessage());<br>        responseData.setData(data);<br>        <span class="hljs-keyword">return</span> responseData;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; ResponseData&lt;T&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">(<span class="hljs-type">int</span> code, String message)</span> &#123;<br>        ResponseData&lt;T&gt; responseData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResponseData</span>&lt;&gt;();<br>        responseData.setStatus(code);<br>        responseData.setMessage(message);<br>        <span class="hljs-keyword">return</span> responseData;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="全局异常处理类"><a href="#全局异常处理类" class="headerlink" title="全局异常处理类"></a>全局异常处理类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 默认全局异常处理</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ExceptionHandler(Exception.class)</span><br>    <span class="hljs-meta">@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)</span><br>    <span class="hljs-keyword">public</span> ResponseData&lt;String&gt; <span class="hljs-title function_">exception</span><span class="hljs-params">(Exception e)</span> &#123;<br>        log.error(<span class="hljs-string">&quot;全局异常信息 ex=&#123;&#125;&quot;</span>, e.getMessage(), e);<br>        <span class="hljs-keyword">return</span> ResponseData.fail(ResponseCodeEnum.RSC500.getCode(), e.getMessage());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol><li><p><code>@RestControllerAdvice</code>，<code>RestController</code> 的增强类，可用于实现全局异常处理器</p></li><li><p><code>@ExceptionHandler</code>,统一处理某一类异常，从而减少代码重复率和复杂度，比如要获取自定义异常可以 <code>@ExceptionHandler(BusinessException.class)</code></p></li><li><p><code>@ResponseStatus</code> 指定客户端收到的http状态码</p></li></ol><h1 id="参数校验"><a href="#参数校验" class="headerlink" title="参数校验"></a>参数校验</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="定义实体类"><a href="#定义实体类" class="headerlink" title="定义实体类"></a>定义实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestVO</span> &#123;<br>    <span class="hljs-meta">@Length(min = 4, max = 20, message = &quot;id的长度必须在4-20之间&quot;)</span><br>    <span class="hljs-keyword">private</span> String id;<br>    <span class="hljs-meta">@NotBlank(message = &quot;名称不能为空，空字符串也不允许&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-meta">@Email(message = &quot;请填写正确的邮箱地址&quot;)</span><br>    <span class="hljs-keyword">private</span> String email;<br>    <span class="hljs-meta">@NotEmpty(message = &quot;手机号不能为空&quot;)</span><br>    <span class="hljs-keyword">private</span> String phone;<br>    <span class="hljs-keyword">private</span> String sex;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="修改异常处理类"><a href="#修改异常处理类" class="headerlink" title="修改异常处理类"></a>修改异常处理类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 默认全局异常处理</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ExceptionHandler(Exception.class)</span><br>    <span class="hljs-meta">@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)</span><br>    <span class="hljs-keyword">public</span> ResponseData&lt;String&gt; <span class="hljs-title function_">exception</span><span class="hljs-params">(Exception e)</span> &#123;<br>        log.error(<span class="hljs-string">&quot;全局异常信息 ex=&#123;&#125;&quot;</span>, e.getMessage(), e);<br>        <span class="hljs-keyword">return</span> ResponseData.fail(ResponseCodeEnum.RSC500.getCode(), e.getMessage());<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 自定义特殊异常</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ExceptionHandler(value = &#123;BindException.class,</span><br><span class="hljs-meta">            ValidationException.class,</span><br><span class="hljs-meta">            MethodArgumentNotValidException.class&#125;)</span><br>    <span class="hljs-keyword">public</span> ResponseEntity&lt;ResponseData&lt;String&gt;&gt; <span class="hljs-title function_">handleValidatedException</span><span class="hljs-params">(Exception e)</span> &#123;<br>        ResponseData&lt;String&gt; response = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">if</span> (e <span class="hljs-keyword">instanceof</span> MethodArgumentNotValidException) &#123;<br>            <span class="hljs-type">MethodArgumentNotValidException</span> <span class="hljs-variable">ex</span> <span class="hljs-operator">=</span> (MethodArgumentNotValidException) e;<br>            response = ResponseData.fail(HttpStatus.BAD_REQUEST.value(),<br>                    ex.getBindingResult().getAllErrors().stream()<br>                            .map(ObjectError::getDefaultMessage)<br>                            .collect(Collectors.joining(<span class="hljs-string">&quot;; &quot;</span>)));<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e <span class="hljs-keyword">instanceof</span> ConstraintViolationException) &#123;<br>            <span class="hljs-comment">// BeanValidation GET simple param</span><br>            <span class="hljs-type">ConstraintViolationException</span> <span class="hljs-variable">ex</span> <span class="hljs-operator">=</span> (ConstraintViolationException) e;<br>            response = ResponseData.fail(HttpStatus.BAD_REQUEST.value(),<br>                    ex.getConstraintViolations().stream()<br>                            .map(ConstraintViolation::getMessage)<br>                            .collect(Collectors.joining(<span class="hljs-string">&quot;; &quot;</span>)));<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e <span class="hljs-keyword">instanceof</span> BindException) &#123;<br>            <span class="hljs-comment">// BeanValidation GET object param</span><br>            <span class="hljs-type">BindException</span> <span class="hljs-variable">ex</span> <span class="hljs-operator">=</span> (BindException) e;<br>            response = ResponseData.fail(HttpStatus.BAD_REQUEST.value(),<br>                    ex.getAllErrors().stream()<br>                            .map(ObjectError::getDefaultMessage)<br>                            .collect(Collectors.joining(<span class="hljs-string">&quot;; &quot;</span>)));<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResponseEntity</span>&lt;&gt;(response, HttpStatus.BAD_REQUEST);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="编写测试接口"><a href="#编写测试接口" class="headerlink" title="编写测试接口"></a>编写测试接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Validated</span><br><span class="hljs-meta">@RequestMapping(&quot;/valid&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestController</span> &#123;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/test1&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">test1</span><span class="hljs-params">(<span class="hljs-meta">@Validated</span> <span class="hljs-meta">@RequestBody</span> TestVO testVO)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;testEntity is &#123;&#125;&quot;</span>, testVO);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;test1 valid success&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/test2&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">test2</span><span class="hljs-params">(<span class="hljs-meta">@Validated</span> TestVO testVO)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;testEntity is &#123;&#125;&quot;</span>, testVO);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;test2 valid success&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/test3&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">test3</span><span class="hljs-params">(<span class="hljs-meta">@Email</span> String email)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;email is &#123;&#125;&quot;</span>, email);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;email valid success&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>SpringBoot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CompletableFuture异步任务使用</title>
    <link href="/Java/Java%E5%9F%BA%E7%A1%80/CompletableFuture%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8/"/>
    <url>/Java/Java%E5%9F%BA%E7%A1%80/CompletableFuture%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java基础</tag>
      
      <tag>Java多线程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
